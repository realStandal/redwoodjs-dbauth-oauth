# Provide a PostgreSQL user and set its password. For use with `docker-compose.yml`.
POSTGRES_USER=postgres
POSTGRES_PASSWORD=secret

DATABASE_URL=postgres://postgres:secret@localhost:5432/dbauth_oauth
TEST_DATABASE_URL=postgres://postgres:secret@localhost:5432/test_dbauth_oauth

LOG_LEVEL=debug
PRISMA_HIDE_UPDATE_MESSAGE=true

# You can use `yarn rw g secret`, twice, to generate two unique secrets.
SESSION_SECRET=
WEBHOOK_SECRET=

# The URL users are redirected to after authorizing or rejecting an OAuth request.
OAUTH_REDIRECT_URL=http://localhost:8910/oauth/grant

# !! Your ..._OAUTH_CLIENT_SECRET's should NEVER be exposed to your client (web). !!

# https://discord.com/developers/applications/
# https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes
DISCORD_OAUTH_CLIENT_ID=
DISCORD_OAUTH_CLIENT_SECRET=
DISCORD_OAUTH_SCOPE=email
DISCORD_OAUTH_URL=https://discord.com/api/oauth2/authorize

# https://github.com/settings/applications
# https://docs.github.com/en/developers/apps/building-oauth-apps/scopes-for-oauth-apps
GITHUB_OAUTH_CLIENT_ID=
GITHUB_OAUTH_CLIENT_SECRET=
GITHUB_OAUTH_SCOPE=user
GITHUB_OAUTH_URL=https://github.com/login/oauth/authorize

# https://dev.twitch.tv/console/apps
# https://dev.twitch.tv/docs/authentication/#scopes
TWITCH_OAUTH_CLIENT_ID=
TWITCH_OAUTH_CLIENT_SECRET=
TWITCH_OAUTH_SCOPE=user:read:email
TWITCH_OAUTH_URL=https://id.twitch.tv/oauth2/authorize
